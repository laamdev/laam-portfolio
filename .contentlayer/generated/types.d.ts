// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  priority: number
  isFeatured: boolean
  agency: 'freelance' | 'in-house' | 'personal'
  category: string
  client?: string | undefined
  year: number
  coverImage: string
  summary: string
  description: string
  siteUrl: string
  codeUrl?: string | undefined
  role: string[]
  stack?: Stack[] | undefined
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
}

export type Snippet = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Snippet'
  title: string
  summary?: string | undefined
  publishedAt: IsoDateTimeString
  isFeatured: boolean
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
}  

/** Nested types */
export type Stack = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Stack'
  tech: string
  category: string

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Project | Snippet
export type DocumentTypeNames = 'Project' | 'Snippet'

export type NestedTypes = Stack
export type NestedTypeNames = 'Stack'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
  allSnippets: Snippet[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Project: Project
  Snippet: Snippet
}

export type NestedTypeMap = {
  Stack: Stack
}

 